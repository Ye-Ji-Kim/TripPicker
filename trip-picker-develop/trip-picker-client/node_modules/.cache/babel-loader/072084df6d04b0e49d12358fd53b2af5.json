{"ast":null,"code":"import _slicedToArray from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport Axios from \"axios\";\nimport useGlobalReducer from \"../hooks/useGlobalReduceer\";\n\nconst _useGlobalReducer = useGlobalReducer(),\n      _useGlobalReducer2 = _slicedToArray(_useGlobalReducer, 2),\n      state = _useGlobalReducer2[0],\n      reducer = _useGlobalReducer2[1];\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n\n    default:\n      return rootUrl;\n  }\n};\n\nexport const LOGIN = payload => {\n  reducer({\n    type: \"LOGIN_TRY\"\n  });\n  Axios.post(getUrl(\"LOGIN\"), payload).then(response => reducer({\n    type: \"LOGIN_SUCCESS\",\n    paylaod: response.id\n  })).catch(error => reducer({\n    type: \"LOGIN_FAIL\",\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/Axios/index.js"],"names":["Axios","useGlobalReducer","state","reducer","getUrl","subject","rootUrl","LOGIN","payload","type","post","then","response","paylaod","id","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;0BAEyBA,gBAAgB,E;;MAAlCC,K;MAAOC,O;;AAEd,MAAMC,MAAM,GAAGC,OAAO,IAAI;AACxB,QAAMC,OAAO,GAAG,sCAAhB;;AACA,UAAQD,OAAR;AACE,SAAK,OAAL;AACE,aAAOC,OAAO,GAAG,QAAjB;;AACF;AACE,aAAOA,OAAP;AAJJ;AAMD,CARD;;AAUA,OAAO,MAAMC,KAAK,GAAGC,OAAO,IAAI;AAC9BL,EAAAA,OAAO,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAP;AACAT,EAAAA,KAAK,CAACU,IAAN,CAAWN,MAAM,CAAC,OAAD,CAAjB,EAA4BI,OAA5B,EACGG,IADH,CACQC,QAAQ,IAAIT,OAAO,CAAC;AAAEM,IAAAA,IAAI,EAAE,eAAR;AAAyBI,IAAAA,OAAO,EAAED,QAAQ,CAACE;AAA3C,GAAD,CAD3B,EAEGC,KAFH,CAESC,KAAK,IAAIb,OAAO,CAAC;AAAEM,IAAAA,IAAI,EAAE,YAAR;AAAsBD,IAAAA,OAAO,EAAEQ;AAA/B,GAAD,CAFzB;AAGD,CALM","sourcesContent":["import Axios from \"axios\";\nimport useGlobalReducer from \"../hooks/useGlobalReduceer\";\n\nconst [state, reducer] = useGlobalReducer();\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n    default:\n      return rootUrl;\n  }\n};\n\nexport const LOGIN = payload => {\n  reducer({ type: \"LOGIN_TRY\" });\n  Axios.post(getUrl(\"LOGIN\"), payload)\n    .then(response => reducer({ type: \"LOGIN_SUCCESS\", paylaod: response.id }))\n    .catch(error => reducer({ type: \"LOGIN_FAIL\", payload: error }));\n};\n"]},"metadata":{},"sourceType":"module"}