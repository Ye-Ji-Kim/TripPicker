{"ast":null,"code":"import _slicedToArray from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js\";\nimport React, { useState, useContext } from \"react\";\nimport regionInfo from \"../helper/regionInfo\";\nimport { axios } from \"../customAxios\";\nimport { DispatchContext, StateContext } from \"../App\";\n\nconst RegionSelectMap = () => {\n  const _useState = useState(\"서울\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        sido = _useState2[0],\n        setSido = _useState2[1];\n\n  const _useState3 = useState(\"종로구\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sigungu = _useState4[0],\n        setSigungu = _useState4[1];\n\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const getSidoOptions = () => {\n    const sidos = new Set();\n    Object.keys(regionInfo).forEach(regionCode => {\n      const sido = regionInfo[regionCode].sido;\n      sidos.add(sido);\n    });\n    const sidosList = Array.from(sidos);\n    return sidosList.map(sido => React.createElement(\"option\", {\n      value: sido,\n      key: sido,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, sido));\n  };\n\n  const getSigunguOptions = () => {\n    const sigungus = new Set();\n    const curruentSido = sido;\n    let firstFound = true;\n    Object.keys(regionInfo).forEach(regionCode => {\n      const _regionInfo$regionCod = regionInfo[regionCode],\n            sido = _regionInfo$regionCod.sido,\n            sigungu = _regionInfo$regionCod.sigungu;\n\n      if (sido === curruentSido) {\n        if (firstFound) {\n          setSigungu(sigungu);\n          firstFound = false;\n        }\n\n        sigungus.add(sigungu);\n      }\n    });\n    const sigunguList = Array.from(sigungus);\n    return sigunguList.map(sigungu => React.createElement(\"option\", {\n      value: sigungu,\n      key: sigungu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, sigungu));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!sido || !sigungu) return alert(\"지역을 선택해주세요\");\n    const fullRegion = sido + \" \" + sigungu;\n    axios(\"UPDATE_REGION\", dispatch, {\n      userIdx: state.get(\"id\"),\n      region: fullRegion\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: e => setSido(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, getSidoOptions()), React.createElement(\"select\", {\n    onChange: e => setSigungu(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, getSigunguOptions()), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\uC9C0\\uC5ED\\uB4F1\\uB85D\")));\n};\n\nexport default RegionSelectMap;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js"],"names":["React","useState","useContext","regionInfo","axios","DispatchContext","StateContext","RegionSelectMap","sido","setSido","sigungu","setSigungu","dispatch","state","getSidoOptions","sidos","Set","Object","keys","forEach","regionCode","add","sidosList","Array","from","map","getSigunguOptions","sigungus","curruentSido","firstFound","sigunguList","onSubmitHandler","e","preventDefault","alert","fullRegion","userIdx","get","region","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport regionInfo from \"../helper/regionInfo\";\nimport { axios } from \"../customAxios\";\nimport { DispatchContext, StateContext } from \"../App\";\n\nconst RegionSelectMap = () => {\n  const [sido, setSido] = useState(\"서울\");\n  const [sigungu, setSigungu] = useState(\"종로구\");\n\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const getSidoOptions = () => {\n    const sidos = new Set();\n    Object.keys(regionInfo).forEach(regionCode => {\n      const { sido } = regionInfo[regionCode];\n      sidos.add(sido);\n    });\n    const sidosList = Array.from(sidos);\n    return sidosList.map(sido => (\n      <option value={sido} key={sido}>\n        {sido}\n      </option>\n    ));\n  };\n\n  const getSigunguOptions = () => {\n    const sigungus = new Set();\n    const curruentSido = sido;\n    let firstFound = true;\n    Object.keys(regionInfo).forEach(regionCode => {\n      const { sido, sigungu } = regionInfo[regionCode];\n      if (sido === curruentSido) {\n        if (firstFound) {\n          setSigungu(sigungu);\n          firstFound = false;\n        }\n        sigungus.add(sigungu);\n      }\n    });\n    const sigunguList = Array.from(sigungus);\n    return sigunguList.map(sigungu => (\n      <option value={sigungu} key={sigungu}>\n        {sigungu}\n      </option>\n    ));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!sido || !sigungu) return alert(\"지역을 선택해주세요\");\n    const fullRegion = sido + \" \" + sigungu;\n    axios(\"UPDATE_REGION\", dispatch, { userIdx: state.get(\"id\"), region: fullRegion });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitHandler}>\n        <select onChange={e => setSido(e.target.value)}>{getSidoOptions()}</select>\n        <select onChange={e => setSigungu(e.target.value)}>{getSigunguOptions()}</select>\n        <button>지역등록</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegionSelectMap;\n"]},"metadata":{},"sourceType":"module"}