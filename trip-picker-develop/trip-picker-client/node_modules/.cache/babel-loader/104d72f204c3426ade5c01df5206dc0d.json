{"ast":null,"code":"import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({\n    type: \"LOGIN_TRY\"\n  });\n  Axios.post(getUrl(\"LOGIN\"), data).then(response => dispatch({\n    type: \"LOGIN_SUCCESS\",\n    paylaod: response.id\n  })).catch(error => dispatch({\n    type: \"LOGIN_FAIL\",\n    payload: error\n  }));\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n\n    default:\n      return;\n  }\n};\n\nexport { axios };","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/customAxios/index.js"],"names":["Axios","getUrl","subject","rootUrl","login","dispatch","data","type","post","then","response","paylaod","id","catch","error","payload","axios","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,IAAI;AACxB,QAAMC,OAAO,GAAG,sCAAhB;;AACA,UAAQD,OAAR;AACE,SAAK,OAAL;AACE,aAAOC,OAAO,GAAG,QAAjB;;AACF;AACE,aAAOA,OAAP;AAJJ;AAMD,CARD;;AAUA,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAChCD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAP,EAAAA,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAAC,OAAD,CAAjB,EAA4BK,IAA5B,EACGG,IADH,CACQC,QAAQ,IAAIL,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,eAAR;AAAyBI,IAAAA,OAAO,EAAED,QAAQ,CAACE;AAA3C,GAAD,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAIT,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,YAAR;AAAsBQ,IAAAA,OAAO,EAAED;AAA/B,GAAD,CAF1B;AAGD,CALD;;AAOA,MAAME,KAAK,GAAG,CAACC,MAAD,EAASZ,QAAT,EAAmBC,IAAnB,KAA4B;AACxC,UAAQW,MAAR;AACE,SAAK,OAAL;AACE,aAAOb,KAAK,CAACC,QAAD,EAAWC,IAAX,CAAZ;;AAEF;AACE;AALJ;AAOD,CARD;;AAUA,SAASU,KAAT","sourcesContent":["import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({ type: \"LOGIN_TRY\" });\n  Axios.post(getUrl(\"LOGIN\"), data)\n    .then(response => dispatch({ type: \"LOGIN_SUCCESS\", paylaod: response.id }))\n    .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: error }));\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n\n    default:\n      return;\n  }\n};\n\nexport { axios };\n"]},"metadata":{},"sourceType":"module"}