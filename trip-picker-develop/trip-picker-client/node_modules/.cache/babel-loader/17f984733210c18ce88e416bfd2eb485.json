{"ast":null,"code":"import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\nimport Axios from \"axios\";\nconst ROOT_URL = \"http://13.125.191.60:8080\";\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  // 임시. 원래는 undefined\n  error: \"\",\n  page: \"login\",\n  region: undefined,\n  // 임시. 원래는 undefined\n  personality: undefined,\n  feed: [],\n  likes: [],\n  favorites: []\n});\n\nconst update_feed = async state => {\n  // 1. 전체 (내 퍼소널리티에 맞는) 아이템들\n  const feed = await Axios.post(ROOT_URL + \"/?\", {\n    personal: state.personality || \"EXTREME_PERSONAL\"\n  }); // 2. 내 즐겨찾기 아이템들\n\n  const favorites = await Axios.post(ROOT_URL + \"/?\", {\n    userIdx: state.userIdx\n  }); // 3. 내 좋아요 아이템들\n\n  const likes = await Axios.post(ROOT_URL + \"/?\", {\n    userIdx: state.userIdx\n  });\n  return state.set(\"likes\", likes).set(\"favorites\", favorites).set(\"feed\", feed);\n};\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state.set(\"loading\", true).set(\"id\", undefined).set(\"error\", \"로딩중...\");\n\n    case \"LOGIN_SUCCESS\":\n      return state.set(\"loading\", false).set(\"id\", action.payload).set(\"error\", undefined);\n\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", \"로그인에 실패했습니다.\");\n\n    case \"REGISTER_SUCCESS\":\n      return state.set(\"loading\", false).set(\"page\", \"login\").set(\"error\", \"회원가입에 성공했습니다. 로그인 해 주세요.\");\n\n    case \"REGISTER_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", action.payload);\n\n    case \"UPDATE_REGION\":\n      return state.set(\"region\", action.payload);\n\n    case \"UPDATE_PERSONALITY\":\n      return state.set(\"personality\", action.payload);\n\n    case \"UPDATE_FEED\":\n      return update_feed(state);\n\n    case \"CLEAR_REGION\":\n      return state.set(\"region\", undefined);\n\n    case \"CLEAR_PERSONALITY\":\n      return state.set(\"personality\", undefined);\n\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n\n    case \"CLAER_ERROR\":\n      return state.set(\"error\", undefined);\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/hooks/useGlobalReducer.js"],"names":["useReducer","Map","Axios","ROOT_URL","initialState","loading","id","undefined","error","page","region","personality","feed","likes","favorites","update_feed","state","post","personal","userIdx","set","reducer","action","console","log","type","payload","useGlobalReducer"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\nimport Axios from \"axios\";\n\nconst ROOT_URL = \"http://13.125.191.60:8080\";\n\nconst initialState = Map({\n  loading: false,\n  id: undefined, // 임시. 원래는 undefined\n  error: \"\",\n  page: \"login\",\n  region: undefined, // 임시. 원래는 undefined\n  personality: undefined,\n  feed: [],\n  likes: [],\n  favorites: []\n});\n\nconst update_feed = async state => {\n  // 1. 전체 (내 퍼소널리티에 맞는) 아이템들\n  const feed = await Axios.post(ROOT_URL + \"/?\", { personal: state.personality || \"EXTREME_PERSONAL\" });\n  // 2. 내 즐겨찾기 아이템들\n  const favorites = await Axios.post(ROOT_URL + \"/?\", { userIdx: state.userIdx });\n  // 3. 내 좋아요 아이템들\n  const likes = await Axios.post(ROOT_URL + \"/?\", { userIdx: state.userIdx });\n  return state\n    .set(\"likes\", likes)\n    .set(\"favorites\", favorites)\n    .set(\"feed\", feed);\n};\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state\n        .set(\"loading\", true)\n        .set(\"id\", undefined)\n        .set(\"error\", \"로딩중...\");\n    case \"LOGIN_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", action.payload)\n        .set(\"error\", undefined);\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", \"로그인에 실패했습니다.\");\n    case \"REGISTER_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"page\", \"login\")\n        .set(\"error\", \"회원가입에 성공했습니다. 로그인 해 주세요.\");\n    case \"REGISTER_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", action.payload);\n\n    case \"UPDATE_REGION\":\n      return state.set(\"region\", action.payload);\n    case \"UPDATE_PERSONALITY\":\n      return state.set(\"personality\", action.payload);\n    case \"UPDATE_FEED\":\n      return update_feed(state);\n\n    case \"CLEAR_REGION\":\n      return state.set(\"region\", undefined);\n    case \"CLEAR_PERSONALITY\":\n      return state.set(\"personality\", undefined);\n\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n    case \"CLAER_ERROR\":\n      return state.set(\"error\", undefined);\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;\n"]},"metadata":{},"sourceType":"module"}