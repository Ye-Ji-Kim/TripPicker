{"ast":null,"code":"import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({\n    type: \"LOGIN_TRY\"\n  }); // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: error }));\n  // Below: TEST\n\n  setTimeout(() => {\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: 5\n    });\n  }, 3000);\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n\n    default:\n      return;\n  }\n};\n\nexport { axios };","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/customAxios/index.js"],"names":["Axios","getUrl","subject","rootUrl","login","dispatch","data","type","setTimeout","payload","axios","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,IAAI;AACxB,QAAMC,OAAO,GAAG,sCAAhB;;AACA,UAAQD,OAAR;AACE,SAAK,OAAL;AACE,aAAOC,OAAO,GAAG,QAAjB;;AACF;AACE,aAAOA,OAAP;AAJJ;AAMD,CARD;;AAUA,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAChCD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR,CADgC,CAEhC;AACA;AACA;AAEA;;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfH,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,eAAR;AAAyBE,MAAAA,OAAO,EAAE;AAAlC,KAAD,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CAVD;;AAYA,MAAMC,KAAK,GAAG,CAACC,MAAD,EAASN,QAAT,EAAmBC,IAAnB,KAA4B;AACxC,UAAQK,MAAR;AACE,SAAK,OAAL;AACE,aAAOP,KAAK,CAACC,QAAD,EAAWC,IAAX,CAAZ;;AAEF;AACE;AALJ;AAOD,CARD;;AAUA,SAASI,KAAT","sourcesContent":["import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({ type: \"LOGIN_TRY\" });\n  // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: error }));\n\n  // Below: TEST\n  setTimeout(() => {\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: 5 });\n  }, 3000);\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n\n    default:\n      return;\n  }\n};\n\nexport { axios };\n"]},"metadata":{},"sourceType":"module"}