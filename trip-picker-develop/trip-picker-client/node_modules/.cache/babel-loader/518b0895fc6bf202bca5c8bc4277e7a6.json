{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/modals/ModalButtons.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  position: absolute;\\n  top: 40px;\\n  right: 40px;\\n  button {\\n    // height: 40px;\\n    // width: 100px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DispatchContext, StateContext } from \"../App\";\nimport { axios } from \"../customAxios\";\nconst modalElem = document.getElementById(\"modal\");\n\nconst ModalButtons = () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const refresh = e => {\n    e.preventDefault();\n    const data = {\n      userIdx: state.get(\"id\")\n    };\n    axios(\"GET_FEED\", dispatch, data);\n  };\n\n  const toggleShowFavorites = () => {\n    const payload = {\n      feed: state.get(\"feed\"),\n      favorites: state.get(\"favorites\"),\n      showFavorites: state.get(\"showFavorites\")\n    };\n    dispatch({\n      type: \"TOGGLE_SHOW_FAVORITES\",\n      payload: payload\n    });\n  };\n\n  return ReactDOM.createPortal(React.createElement(Modal, {\n    id: \"refresh-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-sync-alt fa-3x\",\n    onClick: e => refresh(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: _ => dispatch({\n      type: \"CLEAR_REGION\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"reset region\"), React.createElement(\"button\", {\n    onClick: _ => dispatch({\n      type: \"CLEAR_PERSONALITY\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"reset personality\"), React.createElement(\"button\", {\n    onClick: _ => toggleShowFavorites(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"toggle favorites\")), modalElem);\n};\n\nconst Modal = styled.div(_templateObject());\nexport default ModalButtons;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/modals/ModalButtons.js"],"names":["React","useContext","ReactDOM","styled","DispatchContext","StateContext","axios","modalElem","document","getElementById","ModalButtons","dispatch","state","refresh","e","preventDefault","data","userIdx","get","toggleShowFavorites","payload","feed","favorites","showFavorites","type","createPortal","_","Modal","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,QAA9C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAlB;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGV,UAAU,CAACG,eAAD,CAA3B;AACA,QAAMQ,KAAK,GAAGX,UAAU,CAACI,YAAD,CAAxB;;AAEA,QAAMQ,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAAEC,MAAAA,OAAO,EAAEL,KAAK,CAACM,GAAN,CAAU,IAAV;AAAX,KAAb;AACAZ,IAAAA,KAAK,CAAC,UAAD,EAAaK,QAAb,EAAuBK,IAAvB,CAAL;AACD,GAJD;;AAKA,QAAMG,mBAAmB,GAAG,MAAM;AAChC,UAAMC,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAET,KAAK,CAACM,GAAN,CAAU,MAAV,CAAR;AAA2BI,MAAAA,SAAS,EAAEV,KAAK,CAACM,GAAN,CAAU,WAAV,CAAtC;AAA8DK,MAAAA,aAAa,EAAEX,KAAK,CAACM,GAAN,CAAU,eAAV;AAA7E,KAAhB;AACAP,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE,uBAAR;AAAiCJ,MAAAA,OAAO,EAAEA;AAA1C,KAAD,CAAR;AACD,GAHD;;AAIA,SAAOlB,QAAQ,CAACuB,YAAT,CACL,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,uBAAT;AAAiC,IAAA,OAAO,EAAEX,CAAC,IAAID,OAAO,CAACC,CAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEY,CAAC,IAAIf,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEE,CAAC,IAAIf,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE;AAAQ,IAAA,OAAO,EAAEE,CAAC,IAAIP,mBAAmB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADK,EAOLZ,SAPK,CAAP;AASD,CAtBD;;AAuBA,MAAMoB,KAAK,GAAGxB,MAAM,CAACyB,GAAV,mBAAX;AAWA,eAAelB,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DispatchContext, StateContext } from \"../App\";\nimport { axios } from \"../customAxios\";\n\nconst modalElem = document.getElementById(\"modal\");\nconst ModalButtons = () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const refresh = e => {\n    e.preventDefault();\n    const data = { userIdx: state.get(\"id\") };\n    axios(\"GET_FEED\", dispatch, data);\n  };\n  const toggleShowFavorites = () => {\n    const payload = { feed: state.get(\"feed\"), favorites: state.get(\"favorites\"), showFavorites: state.get(\"showFavorites\") };\n    dispatch({ type: \"TOGGLE_SHOW_FAVORITES\", payload: payload });\n  };\n  return ReactDOM.createPortal(\n    <Modal id=\"refresh-modal\">\n      <i class=\"fas fa-sync-alt fa-3x\" onClick={e => refresh(e)}></i>\n      <button onClick={_ => dispatch({ type: \"CLEAR_REGION\" })}>reset region</button>\n      <button onClick={_ => dispatch({ type: \"CLEAR_PERSONALITY\" })}>reset personality</button>\n      <button onClick={_ => toggleShowFavorites()}>toggle favorites</button>\n    </Modal>,\n    modalElem\n  );\n};\nconst Modal = styled.div`\n  display: inline-block;\n  position: absolute;\n  top: 40px;\n  right: 40px;\n  button {\n    // height: 40px;\n    // width: 100px;\n  }\n`;\n\nexport default ModalButtons;\n"]},"metadata":{},"sourceType":"module"}