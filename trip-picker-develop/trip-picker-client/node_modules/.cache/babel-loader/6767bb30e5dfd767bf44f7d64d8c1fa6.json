{"ast":null,"code":"import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  error: \"\"\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state.set(\"loading\", true).set(\"id\", undefined).set(\"error\", undefined);\n\n    case \"LOGIN_SUCCESS\":\n      console.log(state.set(\"loading\", false).set(\"id\", action.payload).set(\"error\", undefined));\n      console.log(\"?\");\n      return state.set(\"loading\", false).set(\"id\", action.payload).set(\"error\", undefined);\n\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"id\", undefined).set(\"error\", JSON.stringify(action.payload));\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/hooks/useGlobalReducer.js"],"names":["useReducer","Map","initialState","loading","id","undefined","error","reducer","state","action","type","set","console","log","payload","JSON","stringify","useGlobalReducer"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,MAAMC,YAAY,GAAGD,GAAG,CAAC;AACvBE,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,EAAE,EAAEC,SAFmB;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAD,CAAxB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOF,KAAK,CACTG,GADI,CACA,SADA,EACW,IADX,EAEJA,GAFI,CAEA,IAFA,EAEMN,SAFN,EAGJM,GAHI,CAGA,OAHA,EAGSN,SAHT,CAAP;;AAIF,SAAK,eAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CACEL,KAAK,CACFG,GADH,CACO,SADP,EACkB,KADlB,EAEGA,GAFH,CAEO,IAFP,EAEaF,MAAM,CAACK,OAFpB,EAGGH,GAHH,CAGO,OAHP,EAGgBN,SAHhB,CADF;AAMAO,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEA,aAAOL,KAAK,CACTG,GADI,CACA,SADA,EACW,KADX,EAEJA,GAFI,CAEA,IAFA,EAEMF,MAAM,CAACK,OAFb,EAGJH,GAHI,CAGA,OAHA,EAGSN,SAHT,CAAP;;AAIF,SAAK,YAAL;AACE,aAAOG,KAAK,CACTG,GADI,CACA,SADA,EACW,KADX,EAEJA,GAFI,CAEA,IAFA,EAEMN,SAFN,EAGJM,GAHI,CAGA,OAHA,EAGSI,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACK,OAAtB,CAHT,CAAP;;AAIF;AACE,aAAON,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,MAAMS,gBAAgB,GAAG,MAAM;AAC7B,SAAOjB,UAAU,CAACO,OAAD,EAAUL,YAAV,CAAjB;AACD,CAFD;;AAIA,eAAee,gBAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\n\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  error: \"\"\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state\n        .set(\"loading\", true)\n        .set(\"id\", undefined)\n        .set(\"error\", undefined);\n    case \"LOGIN_SUCCESS\":\n      console.log(\n        state\n          .set(\"loading\", false)\n          .set(\"id\", action.payload)\n          .set(\"error\", undefined)\n      );\n      console.log(\"?\");\n\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", action.payload)\n        .set(\"error\", undefined);\n    case \"LOGIN_FAIL\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", undefined)\n        .set(\"error\", JSON.stringify(action.payload));\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;\n"]},"metadata":{},"sourceType":"module"}