{"ast":null,"code":"import { useReducer } from \"react\";\nimport { Map } from \"immutable\"; // global state container (alternatives to Redux)\n\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  error: \"\",\n  page: \"login\"\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state.set(\"loading\", true).set(\"id\", undefined).set(\"error\", \"로딩중:\");\n\n    case \"LOGIN_SUCCESS\":\n      return state.set(\"loading\", false).set(\"id\", action.payload).set(\"error\", undefined);\n\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"id\", undefined).set(\"error\", JSON.stringify(action.payload));\n\n    case \"REGISTER_SUCCESS\":\n      return state.set(\"loading\", false).set(\"id\", undefined).set(\"error\", \"회원가입에 성공했습니다\");\n\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/hooks/useGlobalReducer.js"],"names":["useReducer","Map","initialState","loading","id","undefined","error","page","reducer","state","action","type","set","payload","JSON","stringify","useGlobalReducer"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,WAApB,C,CAEA;;AAEA,MAAMC,YAAY,GAAGD,GAAG,CAAC;AACvBE,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,EAAE,EAAEC,SAFmB;AAGvBC,EAAAA,KAAK,EAAE,EAHgB;AAIvBC,EAAAA,IAAI,EAAE;AAJiB,CAAD,CAAxB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOF,KAAK,CACTG,GADI,CACA,SADA,EACW,IADX,EAEJA,GAFI,CAEA,IAFA,EAEMP,SAFN,EAGJO,GAHI,CAGA,OAHA,EAGS,MAHT,CAAP;;AAIF,SAAK,eAAL;AACE,aAAOH,KAAK,CACTG,GADI,CACA,SADA,EACW,KADX,EAEJA,GAFI,CAEA,IAFA,EAEMF,MAAM,CAACG,OAFb,EAGJD,GAHI,CAGA,OAHA,EAGSP,SAHT,CAAP;;AAIF,SAAK,YAAL;AACE,aAAOI,KAAK,CACTG,GADI,CACA,SADA,EACW,KADX,EAEJA,GAFI,CAEA,IAFA,EAEMP,SAFN,EAGJO,GAHI,CAGA,OAHA,EAGSE,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACG,OAAtB,CAHT,CAAP;;AAIF,SAAK,kBAAL;AACE,aAAOJ,KAAK,CACTG,GADI,CACA,SADA,EACW,KADX,EAEJA,GAFI,CAEA,IAFA,EAEMP,SAFN,EAGJO,GAHI,CAGA,OAHA,EAGS,cAHT,CAAP;;AAIF,SAAK,eAAL;AACE,aAAOH,KAAK,CAACG,GAAN,CAAU,MAAV,EAAkB,UAAlB,CAAP;;AACF,SAAK,YAAL;AACE,aAAOH,KAAK,CAACG,GAAN,CAAU,MAAV,EAAkB,OAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,MAAMO,gBAAgB,GAAG,MAAM;AAC7B,SAAOhB,UAAU,CAACQ,OAAD,EAAUN,YAAV,CAAjB;AACD,CAFD;;AAIA,eAAec,gBAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\n\n// global state container (alternatives to Redux)\n\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  error: \"\",\n  page: \"login\"\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state\n        .set(\"loading\", true)\n        .set(\"id\", undefined)\n        .set(\"error\", \"로딩중:\");\n    case \"LOGIN_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", action.payload)\n        .set(\"error\", undefined);\n    case \"LOGIN_FAIL\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", undefined)\n        .set(\"error\", JSON.stringify(action.payload));\n    case \"REGISTER_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", undefined)\n        .set(\"error\", \"회원가입에 성공했습니다\");\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;\n"]},"metadata":{},"sourceType":"module"}