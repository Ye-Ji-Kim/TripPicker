{"ast":null,"code":"import _slicedToArray from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/pages/Register.js\";\nimport React, { useContext } from \"react\";\nimport { DispatchContext } from \"../App\";\nimport useInputState from \"../hooks/useInputState\";\nimport { axios } from \"../customAxios\";\n\nconst Register = () => {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        email = _useInputState2[0],\n        emailBind = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        password = _useInputState4[0],\n        passwordBind = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        passwordConfirm = _useInputState6[0],\n        passwordConfirmBind = _useInputState6[1];\n\n  const _useInputState7 = useInputState(\"\"),\n        _useInputState8 = _slicedToArray(_useInputState7, 2),\n        name = _useInputState8[0],\n        nameBind = _useInputState8[1];\n\n  const dispatch = useContext(DispatchContext);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    console.log(email, passwordConfirm, password, name);\n    if (!email || !password || !passwordConfirm || !name) return alert(\"입력하지 않은 항목이 있습니다\");\n    if (password !== passwordConfirm) return alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");\n    axios(\"register\", dispatch, {\n      email,\n      password,\n      name\n    });\n  };\n\n  const onClickHandler = e => {\n    e.preventDefault();\n    dispatch({\n      type: \"GOTO_LOGIN\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD654\\uBA74 (Register) \"), React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"email\"), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, emailBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, passwordBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"passwordConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"passwordConfirm\"), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, passwordConfirmBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, nameBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), React.createElement(\"button\", {\n    onClick: onClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/pages/Register.js"],"names":["React","useContext","DispatchContext","useInputState","axios","Register","email","emailBind","password","passwordBind","passwordConfirm","passwordConfirmBind","name","nameBind","dispatch","onSubmitHandler","e","preventDefault","console","log","alert","onClickHandler","type"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { DispatchContext } from \"../App\";\nimport useInputState from \"../hooks/useInputState\";\nimport { axios } from \"../customAxios\";\n\nconst Register = () => {\n  const [email, emailBind] = useInputState(\"\");\n  const [password, passwordBind] = useInputState(\"\");\n  const [passwordConfirm, passwordConfirmBind] = useInputState(\"\");\n  const [name, nameBind] = useInputState(\"\");\n\n  const dispatch = useContext(DispatchContext);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    console.log(email, passwordConfirm, password, name);\n    if (!email || !password || !passwordConfirm || !name) return alert(\"입력하지 않은 항목이 있습니다\");\n    if (password !== passwordConfirm) return alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");\n    axios(\"register\", dispatch, { email, password, name });\n  };\n\n  const onClickHandler = e => {\n    e.preventDefault();\n    dispatch({ type: \"GOTO_LOGIN\" });\n  };\n\n  return (\n    <div>\n      <h1>회원가입화면 (Register) </h1>\n\n      <form onSubmit={onSubmitHandler}>\n        <div>\n          <label htmlFor=\"email\">email</label>\n          <input type=\"text\" {...emailBind} />\n        </div>\n        <div>\n          <label htmlFor=\"password\">password</label>\n          <input type=\"text\" {...passwordBind} />\n        </div>\n        <div>\n          <label htmlFor=\"passwordConfirm\">passwordConfirm</label>\n          <input type=\"text\" {...passwordConfirmBind} />\n        </div>\n        <div>\n          <label htmlFor=\"name\">name</label>\n          <input type=\"text\" {...nameBind} />\n        </div>\n        {/* <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\"></label>\n          <input type=\"text\" />\n        </div> */}\n        <button>회원가입</button>\n      </form>\n      <button onClick={onClickHandler}>로그인 화면으로 돌아가기</button>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}