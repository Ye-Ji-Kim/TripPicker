{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/pages/Register.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 100px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: 100px;\\n  padding-top:10px;\\n  margin: 30px 0\\n  margin: 0 auto;\\n  width: 400px;\\n  background-color: skyblue;\\n  border-radius: 10px; \\n\\n  div {\\n    padding-bottom: 20px;\\n    text-align: center;\\n  }\\n  button {\\n    margin-bottom:10px\\n    border-radius: 5px;\\n    width: 150px;\\n    padding:10px 0 ;\\n  }\\n\\n  #login-btn {\\n    background-color: pink;\\n  }\\n  #registration-btn {\\n    background-color: gray;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport { DispatchContext } from \"../App\";\nimport useInputState from \"../hooks/useInputState\";\nimport { axios } from \"../customAxios\";\nimport styled from \"styled-components\";\n\nconst Register = () => {\n  const _useInputState = useInputState(\"\"),\n        _useInputState2 = _slicedToArray(_useInputState, 2),\n        email = _useInputState2[0],\n        emailBind = _useInputState2[1];\n\n  const _useInputState3 = useInputState(\"\"),\n        _useInputState4 = _slicedToArray(_useInputState3, 2),\n        password = _useInputState4[0],\n        passwordBind = _useInputState4[1];\n\n  const _useInputState5 = useInputState(\"\"),\n        _useInputState6 = _slicedToArray(_useInputState5, 2),\n        passwordConfirm = _useInputState6[0],\n        passwordConfirmBind = _useInputState6[1];\n\n  const _useInputState7 = useInputState(\"\"),\n        _useInputState8 = _slicedToArray(_useInputState7, 2),\n        name = _useInputState8[0],\n        nameBind = _useInputState8[1];\n\n  const dispatch = useContext(DispatchContext);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!email || !password || !passwordConfirm || !name) return alert(\"입력하지 않은 항목이 있습니다\");\n    if (password !== passwordConfirm) return alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");\n    axios(\"REGISTER\", dispatch, {\n      email,\n      password,\n      name\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Blank, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(RegisterForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\uC774\\uBA54\\uC77C\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, emailBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"password\"\n  }, passwordBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"passwordConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638(\\uB2E4\\uC2DC)\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"password\"\n  }, passwordConfirmBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\uC774\\uB984\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, nameBind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    id: \"register-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")), React.createElement(\"button\", {\n    id: \"goto-login-btn\",\n    onClick: _ => dispatch({\n      type: \"GOTO_LOGIN\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\")));\n};\n\nexport default Register;\nconst RegisterForm = styled.div(_templateObject());\nconst Blank = styled.div(_templateObject2());","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/pages/Register.js"],"names":["React","useContext","DispatchContext","useInputState","axios","styled","Register","email","emailBind","password","passwordBind","passwordConfirm","passwordConfirmBind","name","nameBind","dispatch","onSubmitHandler","e","preventDefault","alert","_","type","RegisterForm","div","Blank"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { DispatchContext } from \"../App\";\nimport useInputState from \"../hooks/useInputState\";\nimport { axios } from \"../customAxios\";\nimport styled from \"styled-components\";\n\nconst Register = () => {\n  const [email, emailBind] = useInputState(\"\");\n  const [password, passwordBind] = useInputState(\"\");\n  const [passwordConfirm, passwordConfirmBind] = useInputState(\"\");\n  const [name, nameBind] = useInputState(\"\");\n\n  const dispatch = useContext(DispatchContext);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!email || !password || !passwordConfirm || !name) return alert(\"입력하지 않은 항목이 있습니다\");\n    if (password !== passwordConfirm) return alert(\"비밀번호와 비밀번호 확인이 일치하지 않습니다\");\n    axios(\"REGISTER\", dispatch, { email, password, name });\n  };\n\n  return (\n    <>\n      <Blank />\n      <RegisterForm>\n        <h1>회원가입</h1>\n\n        <form onSubmit={onSubmitHandler}>\n          <div>\n            <label htmlFor=\"email\">이메일</label> <br />\n            <input type=\"text\" {...emailBind} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">비밀번호</label> <br />\n            <input type=\"password\" {...passwordBind} />\n          </div>\n          <div>\n            <label htmlFor=\"passwordConfirm\">비밀번호(다시)</label> <br />\n            <input type=\"password\" {...passwordConfirmBind} />\n          </div>\n          <div>\n            <label htmlFor=\"name\">이름</label> <br />\n            <input type=\"text\" {...nameBind} />\n          </div>\n          <button id=\"register-btn\">회원가입</button>\n        </form>\n        <button id=\"goto-login-btn\" onClick={_ => dispatch({ type: \"GOTO_LOGIN\" })}>\n          로그인 화면으로 돌아가기\n        </button>\n      </RegisterForm>\n    </>\n  );\n};\n\nexport default Register;\n\nconst RegisterForm = styled.div`\n  margin-top: 100px;\n  padding-top:10px;\n  margin: 30px 0\n  margin: 0 auto;\n  width: 400px;\n  background-color: skyblue;\n  border-radius: 10px; \n\n  div {\n    padding-bottom: 20px;\n    text-align: center;\n  }\n  button {\n    margin-bottom:10px\n    border-radius: 5px;\n    width: 150px;\n    padding:10px 0 ;\n  }\n\n  #login-btn {\n    background-color: pink;\n  }\n  #registration-btn {\n    background-color: gray;\n  }\n`;\n\nconst Blank = styled.div`\n  height: 100px;\n`;\n"]},"metadata":{},"sourceType":"module"}