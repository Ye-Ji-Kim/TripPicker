{"ast":null,"code":"import _slicedToArray from \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js\";\nimport React, { useState, useContext } from \"react\";\nimport regionInfo from \"../helper/regionInfo\";\nimport { axios } from \"../customAxios\";\nimport { DispatchContext } from \"../App\";\n\nconst RegionSelectMap = () => {\n  const _useState = useState(\"서울\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        sido = _useState2[0],\n        setSido = _useState2[1];\n\n  const _useState3 = useState(\"종로구\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sigungu = _useState4[0],\n        setSigungu = _useState4[1];\n\n  const dispatch = useContext(DispatchContext);\n\n  const getSidoOptions = () => {\n    const sidos = new Set();\n    Object.keys(regionInfo).forEach(regionCode => {\n      const sido = regionInfo[regionCode].sido;\n      sidos.add(sido);\n    });\n    const sidosList = Array.from(sidos);\n    return sidosList.map(sido => React.createElement(\"option\", {\n      value: sido,\n      key: sido,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, sido));\n  };\n\n  const getSigunguOptions = () => {\n    const sigungus = new Set();\n    const curruentSido = sido;\n    Object.keys(regionInfo).forEach(regionCode => {\n      const _regionInfo$regionCod = regionInfo[regionCode],\n            sido = _regionInfo$regionCod.sido,\n            sigungu = _regionInfo$regionCod.sigungu;\n      if (sido === curruentSido) sigungus.add(sigungu);\n    });\n    const sigunguList = Array.from(sigungus);\n    return sigunguList.map(sigungu => React.createElement(\"option\", {\n      value: sigungu,\n      key: sigungu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, sigungu));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!sido || !sigungu) return alert(\"지역을 선택해주세요\");\n    const fullRegion = sido + \" \" + sigungu; // TODO: axios 로 서버에 region 업데이트 하고, 동시에 state[region] 업데이트\n\n    axios(\"UPDATE_REGION\", dispatch, {\n      region: fullRegion\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: e => setSido(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, getSidoOptions()), React.createElement(\"select\", {\n    onChange: e => setSigungu(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, getSigunguOptions()), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\uC9C0\\uC5ED\\uB4F1\\uB85D\")));\n};\n\nexport default RegionSelectMap;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js"],"names":["React","useState","useContext","regionInfo","axios","DispatchContext","RegionSelectMap","sido","setSido","sigungu","setSigungu","dispatch","getSidoOptions","sidos","Set","Object","keys","forEach","regionCode","add","sidosList","Array","from","map","getSigunguOptions","sigungus","curruentSido","sigunguList","onSubmitHandler","e","preventDefault","alert","fullRegion","region","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport regionInfo from \"../helper/regionInfo\";\nimport { axios } from \"../customAxios\";\nimport { DispatchContext } from \"../App\";\n\nconst RegionSelectMap = () => {\n  const [sido, setSido] = useState(\"서울\");\n  const [sigungu, setSigungu] = useState(\"종로구\");\n\n  const dispatch = useContext(DispatchContext);\n\n  const getSidoOptions = () => {\n    const sidos = new Set();\n    Object.keys(regionInfo).forEach(regionCode => {\n      const { sido } = regionInfo[regionCode];\n      sidos.add(sido);\n    });\n    const sidosList = Array.from(sidos);\n    return sidosList.map(sido => (\n      <option value={sido} key={sido}>\n        {sido}\n      </option>\n    ));\n  };\n\n  const getSigunguOptions = () => {\n    const sigungus = new Set();\n    const curruentSido = sido;\n    Object.keys(regionInfo).forEach(regionCode => {\n      const { sido, sigungu } = regionInfo[regionCode];\n      if (sido === curruentSido) sigungus.add(sigungu);\n    });\n    const sigunguList = Array.from(sigungus);\n    return sigunguList.map(sigungu => (\n      <option value={sigungu} key={sigungu}>\n        {sigungu}\n      </option>\n    ));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!sido || !sigungu) return alert(\"지역을 선택해주세요\");\n    const fullRegion = sido + \" \" + sigungu;\n    // TODO: axios 로 서버에 region 업데이트 하고, 동시에 state[region] 업데이트\n\n    axios(\"UPDATE_REGION\", dispatch, { region: fullRegion });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitHandler}>\n        <select onChange={e => setSido(e.target.value)}>{getSidoOptions()}</select>\n        <select onChange={e => setSigungu(e.target.value)}>{getSigunguOptions()}</select>\n        <button>지역등록</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegionSelectMap;\n"]},"metadata":{},"sourceType":"module"}