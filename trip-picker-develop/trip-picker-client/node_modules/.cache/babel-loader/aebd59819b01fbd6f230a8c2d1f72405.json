{"ast":null,"code":"var _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js\";\nimport React from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport regionInfo from \"../helper/regionInfo\";\n\nconst RegionSelectMap = () => {\n  const createSelectItems = () => {\n    let items = [];\n\n    for (let i = 0; i <= this.props.maxValue; i++) {\n      items.push(React.createElement(\"option\", {\n        key: i,\n        value: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, i)); //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n    }\n\n    return items;\n  };\n\n  const onDropdownSelected = e => {\n    console.log(\"THE VAL\", e.target.value); //here you will see the current selected value of the select input\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"select\",\n    onChange: this.onDropdownSelected,\n    label: \"Multiple Select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, this.createSelectItems()));\n};\n\nexport default RegionSelectMap;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js"],"names":["React","DaumPostcode","regionInfo","RegionSelectMap","createSelectItems","items","i","props","maxValue","push","onDropdownSelected","e","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKC,KAAL,CAAWC,QAAhC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7CD,MAAAA,KAAK,CAACI,IAAN,CACE;AAAQ,QAAA,GAAG,EAAEH,CAAb;AAAgB,QAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,CADH,CADF,EAD6C,CAM7C;AACA;AACD;;AACD,WAAOD,KAAP;AACD,GAZD;;AAcA,QAAMK,kBAAkB,GAAGC,CAAC,IAAI;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAC,CAACG,MAAF,CAASC,KAAhC,EAD8B,CAE9B;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAE,KAAKL,kBAApC;AAAwD,IAAA,KAAK,EAAC,iBAA9D;AAAgF,IAAA,QAAQ,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKN,iBAAL,EADH,CADF,CADF;AAOD,CA1BD;;AA4BA,eAAeD,eAAf","sourcesContent":["import React from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport regionInfo from \"../helper/regionInfo\";\n\nconst RegionSelectMap = () => {\n  const createSelectItems = () => {\n    let items = [];\n    for (let i = 0; i <= this.props.maxValue; i++) {\n      items.push(\n        <option key={i} value={i}>\n          {i}\n        </option>\n      );\n      //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n    }\n    return items;\n  };\n\n  const onDropdownSelected = e => {\n    console.log(\"THE VAL\", e.target.value);\n    //here you will see the current selected value of the select input\n  };\n  return (\n    <div>\n      <input type=\"select\" onChange={this.onDropdownSelected} label=\"Multiple Select\" multiple>\n        {this.createSelectItems()}\n      </input>\n    </div>\n  );\n};\n\nexport default RegionSelectMap;\n"]},"metadata":{},"sourceType":"module"}