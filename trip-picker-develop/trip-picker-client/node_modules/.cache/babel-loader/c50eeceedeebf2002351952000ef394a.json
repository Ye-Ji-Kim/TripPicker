{"ast":null,"code":"var _jsxFileName = \"/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js\";\nimport React from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\n\nclass RegionSelectMap extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleAddress = data => {\n      let fullAddress = data.address;\n      let extraAddress = \"\";\n\n      if (data.addressType === \"R\") {\n        if (data.bname !== \"\") {\n          extraAddress += data.bname;\n        }\n\n        if (data.buildingName !== \"\") {\n          extraAddress += extraAddress !== \"\" ? \", \".concat(data.buildingName) : data.buildingName;\n        }\n\n        fullAddress += extraAddress !== \"\" ? \" (\".concat(extraAddress, \")\") : \"\";\n      }\n\n      console.log(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\n    };\n  }\n\n  render() {\n    return React.createElement(DaumPostcode, {\n      onComplete: this.handleAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n} // const RegionSelectMap = () => {\n//   return <div>RegionSelectMap</div>;\n// };\n\n\nexport default RegionSelectMap;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/components/RegionSelectMap.js"],"names":["React","DaumPostcode","RegionSelectMap","Component","handleAddress","data","fullAddress","address","extraAddress","addressType","bname","buildingName","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC5CC,aAD4C,GAC5BC,IAAI,IAAI;AACtB,UAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;AACA,UAAIC,YAAY,GAAG,EAAnB;;AAEA,UAAIH,IAAI,CAACI,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,YAAIJ,IAAI,CAACK,KAAL,KAAe,EAAnB,EAAuB;AACrBF,UAAAA,YAAY,IAAIH,IAAI,CAACK,KAArB;AACD;;AACD,YAAIL,IAAI,CAACM,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,UAAAA,YAAY,IAAIA,YAAY,KAAK,EAAjB,eAA2BH,IAAI,CAACM,YAAhC,IAAiDN,IAAI,CAACM,YAAtE;AACD;;AACDL,QAAAA,WAAW,IAAIE,YAAY,KAAK,EAAjB,eAA2BA,YAA3B,SAA6C,EAA5D;AACD;;AAEDI,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAdsB,CAcI;AAC3B,KAhB2C;AAAA;;AAkB5CQ,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAE,KAAKV,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AApB2C,C,CAsB9C;AACA;AACA;;;AAEA,eAAeF,eAAf","sourcesContent":["import React from \"react\";\n\nimport DaumPostcode from \"react-daum-postcode\";\n\nclass RegionSelectMap extends React.Component {\n  handleAddress = data => {\n    let fullAddress = data.address;\n    let extraAddress = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n    }\n\n    console.log(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\n  };\n\n  render() {\n    return <DaumPostcode onComplete={this.handleAddress} />;\n  }\n}\n// const RegionSelectMap = () => {\n//   return <div>RegionSelectMap</div>;\n// };\n\nexport default RegionSelectMap;\n"]},"metadata":{},"sourceType":"module"}