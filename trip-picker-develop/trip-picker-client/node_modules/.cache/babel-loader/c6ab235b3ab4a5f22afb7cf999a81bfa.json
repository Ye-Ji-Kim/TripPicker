{"ast":null,"code":"import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({\n    type: \"LOGIN_TRY\"\n  }); // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: \"로그인 실패\" }));\n  // Below: TEST\n\n  dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: 5\n  });\n};\n\nconst register = (dispatch, data) => {\n  dispatch({\n    type: \"LOGIN_TRY\"\n  }); // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: \"로그인 실패\" }));\n  // Below: TEST\n\n  dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: 5\n  });\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n\n    case \"register\":\n      return register(dispatch, data);\n\n    default:\n      return;\n  }\n};\n\nexport { axios };","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/customAxios/index.js"],"names":["Axios","getUrl","subject","rootUrl","login","dispatch","data","type","payload","register","axios","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,IAAI;AACxB,QAAMC,OAAO,GAAG,sCAAhB;;AACA,UAAQD,OAAR;AACE,SAAK,OAAL;AACE,aAAOC,OAAO,GAAG,QAAjB;;AACF;AACE,aAAOA,OAAP;AAJJ;AAMD,CARD;;AAUA,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAChCD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR,CADgC,CAEhC;AACA;AACA;AAEA;;AACAF,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAE;AAAlC,GAAD,CAAR;AACD,CARD;;AAUA,MAAMC,QAAQ,GAAG,CAACJ,QAAD,EAAWC,IAAX,KAAoB;AACnCD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR,CADmC,CAEnC;AACA;AACA;AAEA;;AACAF,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAE;AAAlC,GAAD,CAAR;AACD,CARD;;AAUA,MAAME,KAAK,GAAG,CAACC,MAAD,EAASN,QAAT,EAAmBC,IAAnB,KAA4B;AACxC,UAAQK,MAAR;AACE,SAAK,OAAL;AACE,aAAOP,KAAK,CAACC,QAAD,EAAWC,IAAX,CAAZ;;AACF,SAAK,UAAL;AACE,aAAOG,QAAQ,CAACJ,QAAD,EAAWC,IAAX,CAAf;;AACF;AACE;AANJ;AAQD,CATD;;AAWA,SAASI,KAAT","sourcesContent":["import Axios from \"axios\";\n\nconst getUrl = subject => {\n  const rootUrl = \"https://jsonplaceholder.typicode.com\";\n  switch (subject) {\n    case \"LOGIN\":\n      return rootUrl + \"/user/\";\n    default:\n      return rootUrl;\n  }\n};\n\nconst login = (dispatch, data) => {\n  dispatch({ type: \"LOGIN_TRY\" });\n  // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: \"로그인 실패\" }));\n\n  // Below: TEST\n  dispatch({ type: \"LOGIN_SUCCESS\", payload: 5 });\n};\n\nconst register = (dispatch, data) => {\n  dispatch({ type: \"LOGIN_TRY\" });\n  // Axios.post(getUrl(\"LOGIN\"), data)\n  //   .then(response => dispatch({ type: \"LOGIN_SUCCESS\", payload: response.id }))\n  //   .catch(error => dispatch({ type: \"LOGIN_FAIL\", payload: \"로그인 실패\" }));\n\n  // Below: TEST\n  dispatch({ type: \"LOGIN_SUCCESS\", payload: 5 });\n};\n\nconst axios = (action, dispatch, data) => {\n  switch (action) {\n    case \"login\":\n      return login(dispatch, data);\n    case \"register\":\n      return register(dispatch, data);\n    default:\n      return;\n  }\n};\n\nexport { axios };\n"]},"metadata":{},"sourceType":"module"}