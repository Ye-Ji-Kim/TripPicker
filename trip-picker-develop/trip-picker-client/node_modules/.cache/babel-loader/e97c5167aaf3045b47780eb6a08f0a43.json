{"ast":null,"code":"import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\nimport Axios from \"axios\"; // global state container (alternatives to Redux)\n\nconst initialState = Map({\n  loading: false,\n  id: undefined,\n  // 임시. 원래는 undefined\n  error: \"\",\n  page: \"login\",\n  region: undefined,\n  // 임시. 원래는 undefined\n  personality: undefined,\n  feed: [],\n  likes: [],\n  favorites: []\n});\n\nconst update_feed = (state, payload) => {\n  // 1. 전체 (내 퍼소널리티에 맞는) 아이템들\n  Axios.get(ROOT_URL + \"/\"); // 2. 내 즐겨찾기 아이템들\n  // 3. 내 좋아요/싫어요 아이템들\n};\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state.set(\"loading\", true).set(\"id\", undefined).set(\"error\", \"로딩중...\");\n\n    case \"LOGIN_SUCCESS\":\n      return state.set(\"loading\", false).set(\"id\", action.payload).set(\"error\", undefined);\n\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", \"로그인에 실패했습니다.\");\n\n    case \"REGISTER_SUCCESS\":\n      return state.set(\"loading\", false).set(\"page\", \"login\").set(\"error\", \"회원가입에 성공했습니다. 로그인 해 주세요.\");\n\n    case \"REGISTER_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", action.payload);\n\n    case \"UPDATE_REGION\":\n      return state.set(\"region\", action.payload);\n\n    case \"UPDATE_PERSONALITY\":\n      return state.set(\"personality\", action.payload);\n\n    case \"UPDATE_FEED\":\n      return update_feed(state);\n\n    case \"CLEAR_REGION\":\n      return state.set(\"region\", undefined);\n\n    case \"CLEAR_PERSONALITY\":\n      return state.set(\"personality\", undefined);\n\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n\n    case \"CLAER_ERROR\":\n      return state.set(\"error\", undefined);\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;","map":{"version":3,"sources":["/Users/roeniss/Desktop/workspace/sinsudong-crusher/trip-picker-develop/trip-picker-client/src/hooks/useGlobalReducer.js"],"names":["useReducer","Map","Axios","initialState","loading","id","undefined","error","page","region","personality","feed","likes","favorites","update_feed","state","payload","get","ROOT_URL","reducer","action","console","log","type","set","useGlobalReducer"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport { Map } from \"immutable\";\nimport Axios from \"axios\";\n\n// global state container (alternatives to Redux)\n\nconst initialState = Map({\n  loading: false,\n  id: undefined, // 임시. 원래는 undefined\n  error: \"\",\n  page: \"login\",\n  region: undefined, // 임시. 원래는 undefined\n  personality: undefined,\n  feed: [],\n  likes: [],\n  favorites: []\n});\n\nconst update_feed = (state, payload) => {\n  // 1. 전체 (내 퍼소널리티에 맞는) 아이템들\n  Axios.get(ROOT_URL + \"/\");\n  // 2. 내 즐겨찾기 아이템들\n  // 3. 내 좋아요/싫어요 아이템들\n};\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n  switch (action.type) {\n    case \"LOGIN_TRY\":\n      return state\n        .set(\"loading\", true)\n        .set(\"id\", undefined)\n        .set(\"error\", \"로딩중...\");\n    case \"LOGIN_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"id\", action.payload)\n        .set(\"error\", undefined);\n    case \"LOGIN_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", \"로그인에 실패했습니다.\");\n    case \"REGISTER_SUCCESS\":\n      return state\n        .set(\"loading\", false)\n        .set(\"page\", \"login\")\n        .set(\"error\", \"회원가입에 성공했습니다. 로그인 해 주세요.\");\n    case \"REGISTER_FAIL\":\n      return state.set(\"loading\", false).set(\"error\", action.payload);\n\n    case \"UPDATE_REGION\":\n      return state.set(\"region\", action.payload);\n    case \"UPDATE_PERSONALITY\":\n      return state.set(\"personality\", action.payload);\n    case \"UPDATE_FEED\":\n      return update_feed(state);\n\n    case \"CLEAR_REGION\":\n      return state.set(\"region\", undefined);\n    case \"CLEAR_PERSONALITY\":\n      return state.set(\"personality\", undefined);\n\n    case \"GOTO_REGISTER\":\n      return state.set(\"page\", \"register\");\n    case \"GOTO_LOGIN\":\n      return state.set(\"page\", \"login\");\n    case \"CLAER_ERROR\":\n      return state.set(\"error\", undefined);\n    default:\n      return state;\n  }\n};\n\nconst useGlobalReducer = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalReducer;\n"]},"metadata":{},"sourceType":"module"}